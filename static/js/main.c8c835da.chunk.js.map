{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.*/index$","images/YouTube_Logo_2017.svg","components/Score.jsx","images/light-bulb.png","components/PopupComponent.jsx","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Score","sentimentScore","generalSentiment","className","PopupComponent","trigger","src","icon","alt","position","contentStyle","arrowStyle","sentiment","Sentiment","App","useState","setSentimentScore","setGeneralSentiment","videoId","setVideoId","text","setText","fetchEvents","a","length","fetch","res","json","toString","data","console","log","alert","comment","items","snippet","topLevelComment","textDisplay","logo","onChange","target","value","placeholder","type","onClick","result","analyze","score","ReactDOM","render","document","getElementById"],"mappings":"6JAAA,IAAIA,EAAM,CACT,aAAc,GAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,wHCtBL,MAA0B,8C,OCwB1BY,EAtBD,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAC/B,OACE,qCACE,sBAAKC,UAAU,aAAf,UACE,oBAAGA,UAAU,UAAb,UACE,sBAAMA,UAAU,OAAhB,+BACA,sBAAMA,UAAU,QAAhB,SAAyBF,OAE3B,oBAAGE,UAAU,UAAb,UACE,sBAAMA,UAAU,OAAhB,iCACA,sBAAMA,UAAU,QAAhB,SAAyBD,UAG7B,qBAAKC,UAAU,SAAf,SACE,yDACyB,8DCjBlB,MAA0B,uC,OC+B1BC,G,MA3BQ,WACrB,OACE,cAAC,IAAD,CACEC,QACE,sBAAKF,UAAU,OAAf,UACE,qBAAKG,IAAKC,EAAMC,IAAI,YAAYpB,GAAG,WACnC,4DACA,qBAAKkB,IAAKC,EAAMC,IAAI,YAAYpB,GAAG,cAGvCqB,SAAS,gBARX,SAUE,oBAAGC,aAAa,gBAAgBC,WAAW,cAA3C,sMAIE,mDACA,6LChBFC,EAAY,IAAIC,IAwEPC,EArEH,WACV,MAA4CC,mBAAS,GAArD,mBAAOd,EAAP,KAAuBe,EAAvB,KACA,EAAgDD,mBAAS,WAAzD,mBAAOb,EAAP,KAAyBe,EAAzB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAW,uCAAG,8BAAAC,EAAA,0DACdL,GAA8B,KAAnBA,EAAQM,OADL,iCAEEC,MAAM,4DAAD,OAVb,0CAUa,sDAC4FP,EAD5F,oBAFP,cAEVQ,EAFU,gBAKGA,EAAIC,KAAKC,YALZ,OAKVC,EALU,OAMhBR,EAAQQ,GACRC,QAAQC,IAAIF,GAPI,wBAShBG,MAAM,kCATU,4CAAH,qDAabC,EAAU,GAuBd,OAtBIb,IACFa,EAAUb,EAAKc,MAAMjD,KAAI,SAACO,GACxB,OAAOA,EAAE2C,QAAQC,gBAAgBD,QAAQE,gBAqB3C,sBAAKlC,UAAU,MAAf,UACE,qBAAKG,IAAKgC,EAAM9B,IAAI,eAAeL,UAAU,YAC7C,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,wFACA,uBACEoC,SAAU,SAAC/C,GAAD,OAAO2B,EAAW3B,EAAEgD,OAAOC,QACrCtC,UAAU,QACVuC,YAAY,uBAEd,wBAAQC,KAAK,SAASC,QAAStB,EAA/B,0BAGA,mBAAGnB,UAAU,QAAb,wEAGA,0BAAUsC,MAAOR,EAASW,QAhC9B,SAAqBpD,GACnB,IAAMqD,EAASjC,EAAUkC,QAAQtD,EAAEgD,OAAOC,OAC1CzB,EAAkB6B,EAAOE,OACrBF,EAAOE,MAAQ,GACjB9B,EAAoB,YAElB4B,EAAOE,MAAQ,GACjB9B,EAAoB,YAED,IAAjB4B,EAAOE,OACT9B,EAAoB,cAuBpB,cAAC,EAAD,CACEhB,eAAgBA,EAChBC,iBAAkBA,QClE1B8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c8c835da.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 6\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","export default __webpack_public_path__ + \"static/media/YouTube_Logo_2017.550cda84.svg\";","import React from \"react\";\r\n\r\nconst Score = ({ sentimentScore, generalSentiment }) => {\r\n  return (\r\n    <>\r\n      <div className=\"score-part\">\r\n        <p className=\"score-p\">\r\n          <span className=\"left\">Sentiment Score: </span>\r\n          <span className=\"score\">{sentimentScore}</span>\r\n        </p>\r\n        <p className=\"score-p\">\r\n          <span className=\"left\">General Sentiment: </span>\r\n          <span className=\"score\">{generalSentiment}</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <h2>\r\n          Developed with love by <span>Gyananshu Kashyap</span>\r\n        </h2>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","export default __webpack_public_path__ + \"static/media/light-bulb.fc90eb9e.png\";","import icon from \"../images/light-bulb.png\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\nconst PopupComponent = () => {\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <div className=\"head\">\r\n          <img src={icon} alt=\"Know More\" id=\"popup1\" />\r\n          <h1>Comment Sentiment Analysis</h1>\r\n          <img src={icon} alt=\"Know More\" id=\"popup2\" />\r\n        </div>\r\n      }\r\n      position=\"bottom center\"\r\n    >\r\n      <p contentStyle=\"popup-content\" arrowStyle=\"popup-arrow\">\r\n        This is a comment sentiment analysis app, which gives you a sentiment\r\n        score and a general sentiment of the 100 initial comments on a YouTube\r\n        video, just by giving your desired Video-Id.\r\n        <h2>What is Video-Id?</h2>\r\n        <p>\r\n          \"https://www.youtube.com/watch?v=UKdQjQX1Pko\", in the YouTube Link\r\n          provided the part UKdQjQX1Pko is the Video-Id and it is different for\r\n          every video.\r\n        </p>\r\n      </p>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopupComponent;\r\n","import React, { useState } from \"react\";\nimport Sentiment from \"sentiment\";\nimport logo from \"./images/YouTube_Logo_2017.svg\";\nimport Score from \"./components/Score\";\nimport PopupComponent from \"./components/PopupComponent\";\nconst sentiment = new Sentiment();\nconst API_KEY = \"AIzaSyCOwY8388De03qcCZr_vMOPCaRtEvDI7eo\";\n\nconst App = () => {\n  const [sentimentScore, setSentimentScore] = useState(0);\n  const [generalSentiment, setGeneralSentiment] = useState(\"Neutral\");\n  const [videoId, setVideoId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const fetchEvents = async () => {\n    if (videoId && videoId.length === 11) {\n      const res = await fetch(\n        `https://www.googleapis.com/youtube/v3/commentThreads?key=${API_KEY}&textFormat=plainText&part=snippet&videoId=${videoId}&maxResults=100`\n      );\n      const data = await res.json(toString());\n      setText(data);\n      console.log(data);\n    } else {\n      alert(\"Please enter a valid Video-Id!\");\n    }\n  };\n\n  var comment = \"\";\n  if (text) {\n    comment = text.items.map((e) => {\n      return e.snippet.topLevelComment.snippet.textDisplay;\n    });\n  } else {\n    <h1>Loading!...</h1>;\n  }\n\n  function handleScore(e) {\n    const result = sentiment.analyze(e.target.value);\n    setSentimentScore(result.score);\n    if (result.score < 0) {\n      setGeneralSentiment(\"Negative\");\n    }\n    if (result.score > 0) {\n      setGeneralSentiment(\"Positive\");\n    }\n    if (result.score === 0) {\n      setGeneralSentiment(\"Neutral\");\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <img src={logo} alt=\"YouTube Logo\" className=\"yt-logo\" />\n      <div className=\"pop-up\">\n        <PopupComponent />\n      </div>\n      <p>Enter Video-Id to get the real-time sentiment analysis:</p>\n      <input\n        onChange={(e) => setVideoId(e.target.value)}\n        className=\"input\"\n        placeholder=\"Enter the Video-Id\"\n      ></input>\n      <button type=\"button\" onClick={fetchEvents}>\n        Get Analysis\n      </button>\n      <p className=\"click\">\n        Click on the text to get the real-time sentiment analysis:\n      </p>\n      <textarea value={comment} onClick={handleScore}></textarea>\n      <Score\n        sentimentScore={sentimentScore}\n        generalSentiment={generalSentiment}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}